
// <auto-generated>
//  This code was generated by the following tool on 2023-11-21 10:25:38 GMT-05:00:
//      https://github.com/bottlenoselabs/c2cs (v6.1.3.0)
//
//  Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ReSharper disable All

#region Template
#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS8981
using bottlenoselabs.C2CS.Runtime;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
#endregion

namespace dojo_namespace
{

    public static unsafe partial class dojo
    {
        private const string LibraryName = "dojo";

        #region API

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "client_add_entities_to_sync")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void client_add_entities_to_sync(ToriiClient* client, EntityQuery* entities, UIntPtr entities_len, Error* error);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "client_entity")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial Ty* client_entity(ToriiClient* client, EntityQuery* entity, Error* error);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "client_free")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void client_free(ToriiClient* client);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "client_metadata")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial WorldMetadata client_metadata(ToriiClient* client);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "client_new")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial ToriiClient* client_new(CString torii_url, CString rpc_url, FieldElement* world, EntityQuery* entities, UIntPtr entities_len, Error* error);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "client_remove_entities_to_sync")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void client_remove_entities_to_sync(ToriiClient* client, EntityQuery* entities, UIntPtr entities_len, Error* error);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "client_start_subscription")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial void client_start_subscription(ToriiClient* client, FnPtr_CString_Void message_callback, Error* error);

        [CNode(Kind = "Function")]
        [LibraryImport(LibraryName, EntryPoint = "client_subscribed_entities")]
        [UnmanagedCallConv(CallConvs = new[] { typeof(CallConvCdecl) })]
        public static partial CArray_EntityQuery* client_subscribed_entities(ToriiClient* client);

        #endregion

        #region Types

        [CNode(Kind = "FunctionPointer")]
        [StructLayout(LayoutKind.Sequential)]
        public struct FnPtr_CString_Void
        {
            public delegate* unmanaged<CString, void> Pointer;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct AttributeClause
        {
            [FieldOffset(0)] // size = 8
            public CString _attribute;

            public string attribute
            {
                get
                {
                    return CString.ToString(_attribute);
                }
                set
                {
                    _attribute = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 4
            public ComparisonOperator operator_;

            [FieldOffset(16)] // size = 24
            public Value value;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_CHashItem______c_char__ModelMetadata
        {
            [FieldOffset(0)] // size = 8
            public CHashItem______c_char__ModelMetadata* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_EntityQuery
        {
            [FieldOffset(0)] // size = 8
            public EntityQuery* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_EnumOption
        {
            [FieldOffset(0)] // size = 8
            public EnumOption* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_FieldElement
        {
            [FieldOffset(0)] // size = 8
            public FieldElement* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_Member
        {
            [FieldOffset(0)] // size = 8
            public Member* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_Ty
        {
            [FieldOffset(0)] // size = 8
            public Ty* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct CArray_u8
        {
            [FieldOffset(0)] // size = 8
            public byte* data;

            [FieldOffset(8)] // size = 8
            public UIntPtr data_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 120, Pack = 8)]
        public struct CHashItem______c_char__ModelMetadata
        {
            [FieldOffset(0)] // size = 8
            public CString _key;

            public string key
            {
                get
                {
                    return CString.ToString(_key);
                }
                set
                {
                    _key = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 112
            public ModelMetadata value;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct Clause
        {
            [FieldOffset(0)] // size = 4
            public Clause_Tag tag;

            [FieldOffset(0)] // size = 16
            public KeysClause keys;

            [FieldOffset(0)] // size = 40
            public AttributeClause attribute;

            [FieldOffset(0)] // size = 24
            public CompositeClause composite;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 16
            public KeysClause keys;

            [FieldOffset(0)] // size = 40
            public AttributeClause attribute;

            [FieldOffset(0)] // size = 24
            public CompositeClause composite;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 16
            public KeysClause keys;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 40
            public AttributeClause attribute;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Clause_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 24
            public CompositeClause composite;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct CompositeClause
        {
            [FieldOffset(0)] // size = 4
            public LogicalOperator operator_;

            [FieldOffset(8)] // size = 8
            public Clause* clauses;

            [FieldOffset(16)] // size = 8
            public UIntPtr clauses_len;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 56, Pack = 8)]
        public struct EntityQuery
        {
            [FieldOffset(0)] // size = 8
            public CString _model;

            public string model
            {
                get
                {
                    return CString.ToString(_model);
                }
                set
                {
                    _model = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 48
            public Clause clause;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Enum
        {
            [FieldOffset(0)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 1
            public byte option;

            [FieldOffset(16)] // size = 16
            public CArray_EnumOption options;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct EnumOption
        {
            [FieldOffset(0)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public Ty* ty;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Error
        {
            [FieldOffset(0)] // size = 8
            public CString _message;

            public string message
            {
                get
                {
                    return CString.ToString(_message);
                }
                set
                {
                    _message = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct FieldElement
        {
            [FieldOffset(0)] // size = 32
            public fixed byte _data[32]; // uint8_t[32]

            public readonly Span<byte> data
            {
                get
                {
                    fixed (FieldElement* @this = &this)
                    {
                        var pointer = &@this->_data[0];
                        var span = new Span<byte>(pointer, 32);
                        return span;
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Member
        {
            [FieldOffset(0)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 8
            public Ty* ty;

            [FieldOffset(16)] // size = 1
            public CBool key;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 112, Pack = 8)]
        public struct ModelMetadata
        {
            [FieldOffset(0)] // size = 48
            public Ty schema;

            [FieldOffset(48)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(56)] // size = 4
            public uint packed_size;

            [FieldOffset(60)] // size = 4
            public uint unpacked_size;

            [FieldOffset(64)] // size = 32
            public FieldElement class_hash;

            [FieldOffset(96)] // size = 16
            public CArray_FieldElement layout;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Primitive
        {
            [FieldOffset(0)] // size = 4
            public Primitive_Tag tag;

            [FieldOffset(0)] // size = 1
            public byte u8;

            [FieldOffset(0)] // size = 2
            public ushort u16;

            [FieldOffset(0)] // size = 4
            public uint u32;

            [FieldOffset(0)] // size = 8
            public ulong u64;

            [FieldOffset(0)] // size = 16
            public fixed byte _u128[16]; // uint8_t[16]

            public readonly Span<byte> u128
            {
                get
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }
            }

            [FieldOffset(0)] // size = 32
            public fixed byte _u256[32]; // uint64_t[4]

            public readonly Span<ulong> u256
            {
                get
                {
                    fixed (Primitive* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(0)] // size = 4
            public uint u_size;

            [FieldOffset(0)] // size = 1
            public CBool p_bool;

            [FieldOffset(0)] // size = 32
            public FieldElement felt252;

            [FieldOffset(0)] // size = 32
            public FieldElement class_hash;

            [FieldOffset(0)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 1
            public byte u8;

            [FieldOffset(0)] // size = 2
            public ushort u16;

            [FieldOffset(0)] // size = 4
            public uint u32;

            [FieldOffset(0)] // size = 8
            public ulong u64;

            [FieldOffset(0)] // size = 16
            public fixed byte _u128[16]; // uint8_t[16]

            public readonly Span<byte> u128
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }
            }

            [FieldOffset(0)] // size = 32
            public fixed byte _u256[32]; // uint64_t[4]

            public readonly Span<ulong> u256
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        return span;
                    }
                }
            }

            [FieldOffset(0)] // size = 4
            public uint u_size;

            [FieldOffset(0)] // size = 1
            public CBool p_bool;

            [FieldOffset(0)] // size = 32
            public FieldElement felt252;

            [FieldOffset(0)] // size = 32
            public FieldElement class_hash;

            [FieldOffset(0)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 1
            public byte u8;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 2, Pack = 2)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 2
            public ushort u16;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD10
        {
            [FieldOffset(0)] // size = 32
            public FieldElement contract_address;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 4
            public uint u32;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3
        {
            [FieldOffset(0)] // size = 8
            public ulong u64;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4
        {
            [FieldOffset(0)] // size = 16
            public fixed byte _u128[16]; // uint8_t[16]

            public readonly Span<byte> u128
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4* @this = &this)
                    {
                        var pointer = &@this->_u128[0];
                        var span = new Span<byte>(pointer, 16);
                        return span;
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD5
        {
            [FieldOffset(0)] // size = 32
            public fixed byte _u256[32]; // uint64_t[4]

            public readonly Span<ulong> u256
            {
                get
                {
                    fixed (Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD5* @this = &this)
                    {
                        var pointer = &@this->_u256[0];
                        var span = new Span<ulong>(pointer, 4);
                        return span;
                    }
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 4, Pack = 4)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD6
        {
            [FieldOffset(0)] // size = 4
            public uint u_size;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD7
        {
            [FieldOffset(0)] // size = 1
            public CBool p_bool;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD8
        {
            [FieldOffset(0)] // size = 32
            public FieldElement felt252;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 1)]
        public struct Primitive_ANONYMOUS_FIELD1_ANONYMOUS_FIELD9
        {
            [FieldOffset(0)] // size = 32
            public FieldElement class_hash;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Struct
        {
            [FieldOffset(0)] // size = 8
            public CString _name;

            public string name
            {
                get
                {
                    return CString.ToString(_name);
                }
                set
                {
                    _name = CString.FromString(value);
                }
            }

            [FieldOffset(8)] // size = 16
            public CArray_Member children;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 48, Pack = 8)]
        public struct Ty
        {
            [FieldOffset(0)] // size = 4
            public Ty_Tag tag;

            [FieldOffset(0)] // size = 40
            public Primitive ty_primitive;

            [FieldOffset(0)] // size = 24
            public Struct ty_struct;

            [FieldOffset(0)] // size = 32
            public Enum ty_enum;

            [FieldOffset(0)] // size = 16
            public CArray_Ty ty_tuple;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 40
            public Primitive ty_primitive;

            [FieldOffset(0)] // size = 24
            public Struct ty_struct;

            [FieldOffset(0)] // size = 32
            public Enum ty_enum;

            [FieldOffset(0)] // size = 16
            public CArray_Ty ty_tuple;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 40, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 40
            public Primitive ty_primitive;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 24
            public Struct ty_struct;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 32, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 32
            public Enum ty_enum;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Ty_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3
        {
            [FieldOffset(0)] // size = 16
            public CArray_Ty ty_tuple;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 24, Pack = 8)]
        public struct Value
        {
            [FieldOffset(0)] // size = 4
            public Value_Tag tag;

            [FieldOffset(0)] // size = 8
            public CString _string_;

            public string string_
            {
                get
                {
                    return CString.ToString(_string_);
                }
                set
                {
                    _string_ = CString.FromString(value);
                }
            }

            [FieldOffset(0)] // size = 8
            public long int_;

            [FieldOffset(0)] // size = 8
            public ulong u_int;

            [FieldOffset(0)] // size = 1
            public CBool v_bool;

            [FieldOffset(0)] // size = 16
            public CArray_u8 bytes;
        }

        [CNode(Kind = "Union")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Value_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public CString _string_;

            public string string_
            {
                get
                {
                    return CString.ToString(_string_);
                }
                set
                {
                    _string_ = CString.FromString(value);
                }
            }

            [FieldOffset(0)] // size = 8
            public long int_;

            [FieldOffset(0)] // size = 8
            public ulong u_int;

            [FieldOffset(0)] // size = 1
            public CBool v_bool;

            [FieldOffset(0)] // size = 16
            public CArray_u8 bytes;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Value_ANONYMOUS_FIELD1_ANONYMOUS_FIELD0
        {
            [FieldOffset(0)] // size = 8
            public CString _string_;

            public string string_
            {
                get
                {
                    return CString.ToString(_string_);
                }
                set
                {
                    _string_ = CString.FromString(value);
                }
            }
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Value_ANONYMOUS_FIELD1_ANONYMOUS_FIELD1
        {
            [FieldOffset(0)] // size = 8
            public long int_;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 8, Pack = 8)]
        public struct Value_ANONYMOUS_FIELD1_ANONYMOUS_FIELD2
        {
            [FieldOffset(0)] // size = 8
            public ulong u_int;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 1, Pack = 1)]
        public struct Value_ANONYMOUS_FIELD1_ANONYMOUS_FIELD3
        {
            [FieldOffset(0)] // size = 1
            public CBool v_bool;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct Value_ANONYMOUS_FIELD1_ANONYMOUS_FIELD4
        {
            [FieldOffset(0)] // size = 16
            public CArray_u8 bytes;
        }

        [CNode(Kind = "Struct")]
        [StructLayout(LayoutKind.Explicit, Size = 144, Pack = 8)]
        public struct WorldMetadata
        {
            [FieldOffset(0)] // size = 32
            public FieldElement world_address;

            [FieldOffset(32)] // size = 32
            public FieldElement world_class_hash;

            [FieldOffset(64)] // size = 32
            public FieldElement executor_address;

            [FieldOffset(96)] // size = 32
            public FieldElement executor_class_hash;

            [FieldOffset(128)] // size = 16
            public CArray_CHashItem______c_char__ModelMetadata models;
        }

        [CNode(Kind = "Enum")]
        public enum Clause_Tag : int
        {
            Keys = 0,
            Attribute = 1,
            Composite = 2
        }

        [CNode(Kind = "Enum")]
        public enum ComparisonOperator : int
        {
            Eq = 0,
            Neq = 1,
            Gt = 2,
            Gte = 3,
            Lt = 4,
            Lte = 5
        }

        [CNode(Kind = "Enum")]
        public enum LogicalOperator : int
        {
            And = 0,
            Or = 1
        }

        [CNode(Kind = "Enum")]
        public enum Primitive_Tag : int
        {
            U8 = 0,
            U16 = 1,
            U32 = 2,
            U64 = 3,
            U128 = 4,
            U256 = 5,
            USize = 6,
            PBool = 7,
            Felt252 = 8,
            ClassHash = 9,
            ContractAddress = 10
        }

        [CNode(Kind = "Enum")]
        public enum Ty_Tag : int
        {
            TyPrimitive = 0,
            TyStruct = 1,
            TyEnum = 2,
            TyTuple = 3
        }

        [CNode(Kind = "Enum")]
        public enum Value_Tag : int
        {
            String = 0,
            Int = 1,
            UInt = 2,
            VBool = 3,
            Bytes = 4
        }

        [CNode(Kind = "OpaqueType")]
        [StructLayout(LayoutKind.Sequential)]
        public struct ToriiClient
        {
        }

        [CNode(Kind = "TypeAlias")]
        [StructLayout(LayoutKind.Explicit, Size = 16, Pack = 8)]
        public struct KeysClause
        {
            [FieldOffset(0)]
            public CArray_FieldElement Data;

            public static implicit operator CArray_FieldElement(KeysClause data) => data.Data;
            public static implicit operator KeysClause(CArray_FieldElement data) => new() { Data = data };
        }

        #endregion
    }

}
